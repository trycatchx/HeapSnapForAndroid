apply plugin: 'com.android.library'

android {
    compileSdkVersion 27

//    externalNativeBuild.ndkBuild {
//        path "src/main/jni/Android.mk" //指定c 层的 mk 文件的位置
//    }
    defaultConfig {
        versionCode 1
        versionName "1.0"
        ndk {
            abiFilters "armeabi-v7a",'arm64-v8a'//让APK只包含指定的ABI
        }
    }


    sourceSets.main {
        jni.srcDirs = [] // This prevents the auto generation of Android.mk
        jniLibs.srcDir 'src/main/libs'

    }




    task buildNative(type: Exec, description: 'Compile JNI source via NDK') {
        def ndkDir = android.ndkDirectory
        commandLine "$ndkDir" + "\\ndk-build.cmd",
                '-C', file('src/main/jni').absolutePath, // Change src/main/jni the relative path to your jni source
                '-j', Runtime.runtime.availableProcessors(),
                'all',
                'NDK_DEBUG=1'
    }

    task cleanNative(type: Exec, description: 'Clean JNI object files') {
        def ndkDir = android.ndkDirectory
        commandLine "$ndkDir" + "\\ndk-build.cmd",
                '-C', file('src/main/jni').absolutePath, // Change src/main/jni the relative path to your jni source
                'clean'
    }

    clean.dependsOn 'cleanNative'

    tasks.withType(JavaCompile) {
        compileTask -> compileTask.dependsOn buildNative
    }

}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
}
